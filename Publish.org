* Version
Bump version.

#+NAME: BumpVersion
#+BEGIN_SRC sh :exports both :results output verbatim
haskell-version-bump minor
#+END_SRC

* Module dependencies
** Weeder
Use weeder to reduce dependencies.

** Graph
Check module dependencies.

#+NAME: CheckModuleDependencies
#+BEGIN_SRC sh :exports both :results output verbatim
haskell-stack-package-dependency-graphs
#+END_SRC

#+RESULTS: CheckModuleDependencies
: Graphs will be created in project root: /home/dominik/Shared/haskell/elynx.
: Draw and analyze graphs with 'xdot'.

* Format source files
Format all source files.

#+NAME: CleanFilesStylishHaskell
#+BEGIN_SRC sh :exports code
haskell-format-all
#+END_SRC

* Build
Build project, perform tests, build documentation.

#+NAME: Build
#+BEGIN_SRC sh :exports both :results output verbatim
cabal build all
#+END_SRC

#+RESULTS: Build

* README and Change Log
Update help in [[file:README.org][README.org]] (don't forget to update the help text with =\ b b=),
and [[file:ChangeLog.org][ChangeLog.org]]; export them to Markdown.

* Git
Commit all changes.

Tag new commit with version number created above and push the tag

* Hackage
Upload the source distribution tarballs to Hackage.

Somehow this doesn't work on a project basis, so we have to do it separately for
each package.

** Package candidates only

#+NAME: HackageUploadTarballCandidates
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    (cd "$p" || exit 1
     tarball=$(cabal sdist | tail -n 1)
     cabal upload -u $HACKAGE_USERNAME -p $HACKAGE_PASSWORD $tarball)
done
#+END_SRC

#+RESULTS: HackageUploadTarballCandidates
#+begin_example
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-markov-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-markov-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-nexus-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-nexus-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-seq-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-seq-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-tools-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-tools-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-tree-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-tree-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/slynx-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/slynx-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/tlynx-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/tlynx-0.6.1.1'.
Uploading
/home/dominik/Shared/haskell/elynx/dist-newstyle/sdist/elynx-0.6.1.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-0.6.1.1'.
#+end_example

** Publish packages
#+NAME: HackagePublishTarballs
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    (cd "$p" || exit 1
     tarball=$(cabal sdist | tail -n 1)
     cabal upload --publish -u $HACKAGE_USERNAME -p $HACKAGE_PASSWORD $tarball)
done
#+END_SRC

#+RESULTS: HackagePublishTarballs
#+begin_example
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-markov-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-markov-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - async
- - attoparsec
- - bytestring
- - containers
- - elynx-seq
- - elynx-tools
- - hmatrix
- - hspec
- - integration
- - math-functions
- - mwc-random
- - random
- - statistics
- - vector
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-nexus-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-nexus-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - attoparsec
- - bytestring
- - hspec
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-seq-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-seq-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - aeson
- - attoparsec
- - bytestring
- - containers
- - elynx-tools
- - hspec
- - matrices
- - parallel
- - primitive
- - random
- - vector
- - vector-th-unbox
- - word8
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-tools-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-tools-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - aeson
- - attoparsec
- - base16-bytestring
- - bytestring
- - cryptohash-sha256
- - directory
- - hmatrix
- - optparse-applicative
- - random
- - template-haskell
- - time
- - transformers
- - zlib
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-tree-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-tree-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - QuickCheck
- - aeson
- - attoparsec
- - bytestring
- - comonad
- - containers
- - criterion
- - data-default
- - data-default-class
- - deepseq
- - elynx-nexus
- - elynx-tools
- - hspec
- - math-functions
- - microlens
- - parallel
- - quickcheck-classes
- - random
- - statistics
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/slynx-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/slynx-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - aeson
- - attoparsec
- - bytestring
- - containers
- - elynx-markov
- - elynx-seq
- - elynx-tools
- - elynx-tree
- - hmatrix
- - matrices
- - optparse-applicative
- - random
- - statistics
- - text
- - transformers
- - vector
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/tlynx-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/tlynx-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - aeson
- - async
- - attoparsec
- - bytestring
- - comonad
- - containers
- - data-default-class
- - elynx-tools
- - elynx-tree
- - gnuplot
- - optparse-applicative
- - parallel
- - random
- - statistics
- - text
- - transformers
- - vector
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
Uploading
/home/dominik/projects/haskell/elynx/dist-newstyle/sdist/elynx-0.7.2.1.tar.gz...
Package successfully published. You can now view it at
'https://hackage.haskell.org/package/elynx-0.7.2.1'.
Warnings:
- These packages miss upper bounds:
- - aeson
- - bytestring
- - elynx-tools
- - optparse-applicative
- - slynx
- - tlynx
- Please add them, using `cabal gen-bounds` for suggestions. For more
information see: https://pvp.haskell.org/
#+end_example
